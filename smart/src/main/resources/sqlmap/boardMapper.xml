<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.smart.board.BoardMapper">

<!-- 댓글삭제 -->
<delete id="deleteComment">
delete from board_comment where id = #{id}
</delete>

<!-- 댓글정보조회 -->
<select id="getOneComment">
select * from board_comment where id = #{id}
</select>

<!-- 댓글변경저장 -->
<update id="updateComment">
update board_comment set content = #{content} where id = #{id}
</update>

<!-- 댓글건수조회 -->
<select id="getCountOfComment" resultType="integer">
select count(*) from board_comment where board_id = #{board_id}
</select>


<!-- 댓글목록조회 -->
<select id="getListOfComment" resultType="comment">
select * 
from ( select c.*, name, profile, row_number() over(order by id) no 
	   from board_comment c inner join member m on c.writer = m.userid 
	   where board_id = #{board_id} ) c
where no between #{page.beginList} and #{page.endList}
order by id desc
</select>

<!-- 댓글등록 -->
<insert id="registerComment">
insert into board_comment (board_id, content, writer)
values ( #{parent_id}, #{content}, #{writer} )
</insert>

<!-- 첨부된 파일목록 조회 -->
<select id="getListOfFile" resultType="file">
select * from board_file where board_id = #{id}
</select>

<!-- 방명록 삭제 -->
<delete id="deleteBoard">
delete from board where id = #{id}
</delete>

<!-- 삭제할 파일목록 조회 -->
<select id="getListOfRemovedFile" resultType="file">
select * from board_file where id in ( ${removed} )
</select>


<!-- 방명록 변경저장 -->
<update id="updateBoard">
{
call declare 
begin

update board set title = #{vo.title}, content = #{vo.content}
where id = #{vo.id};

<if test="vo.fileList != null">
<foreach collection="vo.fileList" item="file">
	insert into board_file ( board_id, filename, filepath )
	values( #{vo.id}, #{file.filename}, #{file.filepath} );
</foreach>
</if>

<if test="removed !='' ">
delete from board_file where id in ( ${removed} );
</if>

end
} 
</update>

<!-- 첨부파일정보 조회 -->
<select id="getOneFile" resultType="file">
select * from board_file where id = #{id}
</select>

<!-- 방명록 조회수 증가처리 -->
<update id="updateReadCount">
update board set readcnt = readcnt + 1 
where id = #{id}
</update>


<resultMap type="board" id="boardResult">
	<id property="id" column="id" />
	<result property="title" column="title" />
	<result property="content" column="content" />
	<result property="writer" column="writer" />
	<result property="writedate" column="writedate" />
	<result property="readcnt" column="readcnt" />
	<result property="name" column="name" />
	
	<collection property="fileList" ofType="file">
		<id property="id" column="file_id" />
		<result property="filename" column="filename" />
		<result property="filepath" column="filepath" />
	</collection>
	
</resultMap>

<!-- 방명록 정보조회 -->
<select id="getOneBoard" resultMap="boardResult">
select name, b.*, f.id file_id,  filename, filepath
from board b inner join member m on writer = userid  
left outer join board_file f on b.id = f.board_id
where b.id = #{id}
</select>

<!-- 방명록 등록 -->
<insert id="registerBoard">
{
	call declare 
	begin
	
	insert into board (title, content, writer)
	values ( #{title}, #{content}, #{writer} );
	
	<if test="fileList != null">
	<foreach collection="fileList" item="file">
	insert into board_file(filename, filepath, board_id)
	values ( #{file.filename}, #{file.filepath}, seq_board.currval);
	</foreach>
	</if>

	end
}
</insert>

<sql id="whereSearch">
<if test="keyword != null">
	<choose>
		<when test=" search == 's1' "> <!-- 전체 -->
		where title like '%'|| #{keyword} ||'%'
		or content  like '%'|| #{keyword} ||'%'
		or writer in (select userid from member 
					  where name like '%'|| #{keyword} ||'%') 
		</when>
		<when test=" search == 's2' "> <!-- 제목 -->
		where title like '%'|| #{keyword} ||'%'
		</when>
		<when test=" search == 's3' "> <!-- 내용 -->
		where content like '%'|| #{keyword} ||'%'
		</when>
		<when test=" search == 's4' "> <!-- 작성자 -->
		where writer in (select userid from member 
					  	 where name like '%'|| #{keyword} ||'%') 
		</when>
	
	</choose>
</if>
</sql>

<!-- 방명록 총 건수 조회 -->
<select id="getCountOfBoard" resultType="integer">
select count(*) from board <include refid="whereSearch"/>
</select>

<!-- 방명록 페이지 목록 조회 -->
<select id="getListOfBoard" resultType="board">
<!-- select (select count(*) from board_file where board_id = b.id) filecnt, b.*  -->
select notifycnt, fn_boardFileCount(b.id) filecnt, b.* 
from (  select row_number() over(order by id) no, name, b.* 
  		from board b inner join member on writer = userid
  		<include refid="whereSearch" /> ) b 
  	 left outer join 
	 (  select board_id, count(case when notify=0 then 0 end) notifycnt 
	 	from board_comment
        group by board_id) c on b.id = c.board_id  		
where no between #{beginList} and #{endList}
order by id desc
</select>

</mapper>